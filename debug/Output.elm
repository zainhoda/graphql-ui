module Main exposing (..)


output =
    Ok
        [ TypeDefinition (ClassCaseName "Query")
            (ObjectType
                [ { args =
                        [ { description = Just "distinct select on columns"
                          , name = CamelCaseName "distinct_on"
                          , typeRef =
                                TypeReference
                                    (List
                                        (TypeReference (EnumRef (ClassCaseName "users_select_column")) NonNullable)
                                    )
                                    Nullable
                          }
                        , { description = Just "limit the nuber of rows returned"
                          , name = CamelCaseName "limit"
                          , typeRef = TypeReference (Scalar Int) Nullable
                          }
                        , { description = Just "skip the first n rows. Use only with order_by"
                          , name = CamelCaseName "offset"
                          , typeRef = TypeReference (Scalar Int) Nullable
                          }
                        , { description = Just "sort the rows by one or more columns"
                          , name = CamelCaseName "order_by"
                          , typeRef =
                                TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_order_by")) NonNullable)) Nullable
                          }
                        , { description = Just "filter the rows returned"
                          , name = CamelCaseName "where"
                          , typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable
                          }
                        ]
                  , description = Just "fetch data from the table: \"users\""
                  , name = CamelCaseName "users"
                  , typeRef = TypeReference (List (TypeReference (ObjectRef "users") NonNullable)) NonNullable
                  }
                , { args =
                        [ { description = Just "distinct select on columns", name = CamelCaseName "distinct_on", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "users_select_column")) NonNullable)) Nullable }
                        , { description = Just "limit the nuber of rows returned", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }
                        , { description = Just "skip the first n rows. Use only with order_by", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }
                        , { description = Just "sort the rows by one or more columns", name = CamelCaseName "order_by", typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_order_by")) NonNullable)) Nullable }
                        , { description = Just "filter the rows returned", name = CamelCaseName "where", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable }
                        ]
                  , description = Just "fetch aggregated fields from the table: \"users\""
                  , name = CamelCaseName "users_aggregate"
                  , typeRef = TypeReference (ObjectRef "users_aggregate") NonNullable
                  }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) NonNullable } ], description = Just "fetch data from the table: \"users\" using primary key columns", name = CamelCaseName "users_by_pk", typeRef = TypeReference (ObjectRef "users") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CapsulesFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "capsules", typeRef = TypeReference (List (TypeReference (ObjectRef "Capsule") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CapsulesFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "capsulesPast", typeRef = TypeReference (List (TypeReference (ObjectRef "Capsule") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CapsulesFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "capsulesUpcoming", typeRef = TypeReference (List (TypeReference (ObjectRef "Capsule") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "capsule", typeRef = TypeReference (ObjectRef "Capsule") Nullable }
                , { args = [], description = Just "", name = CamelCaseName "company", typeRef = TypeReference (ObjectRef "Info") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CoresFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "cores", typeRef = TypeReference (List (TypeReference (ObjectRef "Core") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CoresFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "coresPast", typeRef = TypeReference (List (TypeReference (ObjectRef "Core") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "CoresFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "coresUpcoming", typeRef = TypeReference (List (TypeReference (ObjectRef "Core") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "core", typeRef = TypeReference (ObjectRef "Core") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "dragons", typeRef = TypeReference (List (TypeReference (ObjectRef "Dragon") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "dragon", typeRef = TypeReference (ObjectRef "Dragon") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "HistoryFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "histories", typeRef = TypeReference (List (TypeReference (ObjectRef "History") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "HistoryFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "historiesResult", typeRef = TypeReference (ObjectRef "HistoriesResult") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "history", typeRef = TypeReference (ObjectRef "History") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "landpads", typeRef = TypeReference (List (TypeReference (ObjectRef "Landpad") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "landpad", typeRef = TypeReference (ObjectRef "Landpad") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "LaunchFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "launches", typeRef = TypeReference (List (TypeReference (ObjectRef "Launch") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "LaunchFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ]
                  , description = Just ""
                  , name = CamelCaseName "launchesPast"
                  , typeRef = TypeReference (List (TypeReference (ObjectRef "Launch") Nullable)) Nullable
                  }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "LaunchFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "launchesPastResult", typeRef = TypeReference (ObjectRef "LaunchesPastResult") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "LaunchFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "launchesUpcoming", typeRef = TypeReference (List (TypeReference (ObjectRef "Launch") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "launch", typeRef = TypeReference (ObjectRef "Launch") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "launchLatest", typeRef = TypeReference (ObjectRef "Launch") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "launchNext", typeRef = TypeReference (ObjectRef "Launch") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "launchpads", typeRef = TypeReference (List (TypeReference (ObjectRef "Launchpad") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "launchpad", typeRef = TypeReference (ObjectRef "Launchpad") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "MissionsFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "missions", typeRef = TypeReference (List (TypeReference (ObjectRef "Mission") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "MissionsFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "missionsResult", typeRef = TypeReference (ObjectRef "MissionResult") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "mission", typeRef = TypeReference (ObjectRef "Mission") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "PayloadsFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "payloads", typeRef = TypeReference (List (TypeReference (ObjectRef "Payload") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "payload", typeRef = TypeReference (ObjectRef "Payload") Nullable }
                , { args = [], description = Just "", name = CamelCaseName "roadster", typeRef = TypeReference (ObjectRef "Roadster") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "rockets", typeRef = TypeReference (List (TypeReference (ObjectRef "Rocket") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable } ], description = Just "", name = CamelCaseName "rocketsResult", typeRef = TypeReference (ObjectRef "RocketsResult") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (ObjectRef "Rocket") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "ShipsFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "ships", typeRef = TypeReference (List (TypeReference (ObjectRef "Ship") Nullable)) Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "find", typeRef = TypeReference (InputObjectRef (ClassCaseName "ShipsFind")) Nullable }, { description = Just "", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "", name = CamelCaseName "order", typeRef = TypeReference (Scalar String) Nullable }, { description = Just "", name = CamelCaseName "sort", typeRef = TypeReference (Scalar String) Nullable } ], description = Just "", name = CamelCaseName "shipsResult", typeRef = TypeReference (ObjectRef "ShipsResult") Nullable }
                , { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) NonNullable } ], description = Just "", name = CamelCaseName "ship", typeRef = TypeReference (ObjectRef "Ship") Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "users_select_column")
            (EnumType
                [ { description = Just "column name"
                  , name = ClassCaseName "id"
                  }
                , { description = Just "column name", name = ClassCaseName "name" }
                , { description = Just "column name", name = ClassCaseName "rocket" }
                , { description = Just "column name", name = ClassCaseName "timestamp" }
                , { description = Just "column name", name = ClassCaseName "twitter" }
                ]
            )
            (Just "select columns of table \"users\"")
        , TypeDefinition (ClassCaseName "Int") ScalarType Nothing
        , TypeDefinition (ClassCaseName "users_order_by")
            (InputObjectType
                [ { args = []
                  , description = Just ""
                  , name = CamelCaseName "id"
                  , typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable
                  }
                , { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "order_by")
            (EnumType
                [ { description = Just "in the ascending order, nulls last"
                  , name = ClassCaseName "asc"
                  }
                , { description = Just "in the ascending order, nulls first", name = ClassCaseName "asc_nulls_first" }
                , { description = Just "in the ascending order, nulls last", name = ClassCaseName "asc_nulls_last" }
                , { description = Just "in the descending order, nulls first", name = ClassCaseName "desc" }
                , { description = Just "in the descending order, nulls first", name = ClassCaseName "desc_nulls_first" }
                , { description = Just "in the descending order, nulls last", name = ClassCaseName "desc_nulls_last" }
                ]
            )
            (Just "column ordering options")
        , TypeDefinition (ClassCaseName "users_bool_exp")
            (InputObjectType
                [ { args = []
                  , description = Just ""
                  , name = CamelCaseName "_and"
                  , typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable)) Nullable
                  }
                , { args = [], description = Just "", name = CamelCaseName "_not", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "_or", typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable)) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (InputObjectRef (ClassCaseName "uuid_comparison_exp")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (InputObjectRef (ClassCaseName "String_comparison_exp")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (InputObjectRef (ClassCaseName "String_comparison_exp")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (InputObjectRef (ClassCaseName "timestamptz_comparison_exp")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (InputObjectRef (ClassCaseName "String_comparison_exp")) Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "uuid_comparison_exp") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "_eq", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gt", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gte", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_in", typeRef = TypeReference (List (TypeReference (Scalar (Custom (ClassCaseName "uuid"))) NonNullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "_is_null", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lt", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lte", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_neq", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nin", typeRef = TypeReference (List (TypeReference (Scalar (Custom (ClassCaseName "uuid"))) NonNullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "uuid") ScalarType Nothing
        , TypeDefinition (ClassCaseName "Boolean") ScalarType Nothing
        , TypeDefinition (ClassCaseName "String_comparison_exp") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "_eq", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gt", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gte", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_ilike", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_in", typeRef = TypeReference (List (TypeReference (Scalar String) NonNullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "_is_null", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "_like", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lt", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lte", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_neq", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nilike", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nin", typeRef = TypeReference (List (TypeReference (Scalar String) NonNullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nlike", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nsimilar", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "_similar", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "String") ScalarType Nothing
        , TypeDefinition (ClassCaseName "timestamptz_comparison_exp") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "_eq", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gt", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_gte", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_in", typeRef = TypeReference (List (TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) NonNullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "_is_null", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lt", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_lte", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_neq", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "_nin", typeRef = TypeReference (List (TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) NonNullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "timestamptz") ScalarType Nothing
        , TypeDefinition (ClassCaseName "users") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) NonNullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) NonNullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_aggregate") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "aggregate", typeRef = TypeReference (ObjectRef "users_aggregate_fields") Nullable }, { args = [], description = Just "", name = CamelCaseName "nodes", typeRef = TypeReference (List (TypeReference (ObjectRef "users") NonNullable)) NonNullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_aggregate_fields") (ObjectType [ { args = [ { description = Just "", name = CamelCaseName "columns", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "users_select_column")) NonNullable)) Nullable }, { description = Just "", name = CamelCaseName "distinct", typeRef = TypeReference (Scalar Boolean) Nullable } ], description = Just "", name = CamelCaseName "count", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "max", typeRef = TypeReference (ObjectRef "users_max_fields") Nullable }, { args = [], description = Just "", name = CamelCaseName "min", typeRef = TypeReference (ObjectRef "users_min_fields") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_max_fields") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_min_fields") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "CapsulesFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "original_launch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "reuse_count", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ID") ScalarType Nothing
        , TypeDefinition (ClassCaseName "Date") ScalarType Nothing
        , TypeDefinition (ClassCaseName "Capsule") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "missions", typeRef = TypeReference (List (TypeReference (ObjectRef "CapsuleMission") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "original_launch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "reuse_count", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "dragon", typeRef = TypeReference (ObjectRef "Dragon") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "CapsuleMission") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "flight", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Dragon") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "active", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "crew_capacity", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "diameter", typeRef = TypeReference (ObjectRef "Distance") Nullable }, { args = [], description = Just "", name = CamelCaseName "dry_mass_kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "dry_mass_lb", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "first_flight", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "heat_shield", typeRef = TypeReference (ObjectRef "DragonHeatShield") Nullable }, { args = [], description = Just "", name = CamelCaseName "height_w_trunk", typeRef = TypeReference (ObjectRef "Distance") Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_payload_mass", typeRef = TypeReference (ObjectRef "Mass") Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_payload_vol", typeRef = TypeReference (ObjectRef "Volume") Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit_duration_yr", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "pressurized_capsule", typeRef = TypeReference (ObjectRef "DragonPressurizedCapsule") Nullable }, { args = [], description = Just "", name = CamelCaseName "return_payload_mass", typeRef = TypeReference (ObjectRef "Mass") Nullable }, { args = [], description = Just "", name = CamelCaseName "return_payload_vol", typeRef = TypeReference (ObjectRef "Volume") Nullable }, { args = [], description = Just "", name = CamelCaseName "sidewall_angle_deg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "thrusters", typeRef = TypeReference (List (TypeReference (ObjectRef "DragonThrust") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "trunk", typeRef = TypeReference (ObjectRef "DragonTrunk") Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Distance") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "feet", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "meters", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Float") ScalarType Nothing
        , TypeDefinition (ClassCaseName "DragonHeatShield") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "dev_partner", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "material", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "size_meters", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "temp_degrees", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Mass") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "lb", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Volume") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "cubic_feet", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "cubic_meters", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "DragonPressurizedCapsule") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "payload_volume", typeRef = TypeReference (ObjectRef "Volume") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "DragonThrust") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "amount", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "fuel_1", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "fuel_2", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "pods", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust", typeRef = TypeReference (ObjectRef "Force") Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Force") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "kN", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "lbf", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "DragonTrunk") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "cargo", typeRef = TypeReference (ObjectRef "DragonTrunkCargo") Nullable }, { args = [], description = Just "", name = CamelCaseName "trunk_volume", typeRef = TypeReference (ObjectRef "Volume") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "DragonTrunkCargo") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "solar_array", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "unpressurized_cargo", typeRef = TypeReference (Scalar Boolean) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Info") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "ceo", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "coo", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "cto_propulsion", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "cto", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "employees", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "founded", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "founder", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "headquarters", typeRef = TypeReference (ObjectRef "Address") Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_sites", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "links", typeRef = TypeReference (ObjectRef "InfoLinks") Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "summary", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "test_sites", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "valuation", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "vehicles", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Address") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "address", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "city", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "state", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "InfoLinks") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "elon_twitter", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "flickr", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "website", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "CoresFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "asds_attempts", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "asds_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "block", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "missions", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "original_launch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "reuse_count", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "rtls_attempts", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "rtls_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "water_landing", typeRef = TypeReference (Scalar Boolean) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Core") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "asds_attempts", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "asds_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "block", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "missions", typeRef = TypeReference (List (TypeReference (ObjectRef "CapsuleMission") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "original_launch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "reuse_count", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "rtls_attempts", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "rtls_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "water_landing", typeRef = TypeReference (Scalar Boolean) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "HistoryFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "end", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "flight_number", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "start", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "History") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "details", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "event_date_unix", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "event_date_utc", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "links", typeRef = TypeReference (ObjectRef "Link") Nullable }, { args = [], description = Just "", name = CamelCaseName "title", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "flight", typeRef = TypeReference (ObjectRef "Launch") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Link") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "article", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reddit", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Launch") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "details", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "is_tentative", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_local", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_unix", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_utc", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_site", typeRef = TypeReference (ObjectRef "LaunchSite") Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_success", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_year", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "links", typeRef = TypeReference (ObjectRef "LaunchLinks") Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_id", typeRef = TypeReference (List (TypeReference (Scalar String) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (ObjectRef "LaunchRocket") Nullable }, { args = [], description = Just "", name = CamelCaseName "static_fire_date_unix", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "static_fire_date_utc", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "telemetry", typeRef = TypeReference (ObjectRef "LaunchTelemetry") Nullable }, { args = [], description = Just "", name = CamelCaseName "tentative_max_precision", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "upcoming", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "ships", typeRef = TypeReference (List (TypeReference (ObjectRef "Ship") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchSite") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "site_id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "site_name_long", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "site_name", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchLinks") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "article_link", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "flickr_images", typeRef = TypeReference (List (TypeReference (Scalar String) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_patch_small", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_patch", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "presskit", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reddit_campaign", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reddit_launch", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reddit_media", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reddit_recovery", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "video_link", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchRocket") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "fairings", typeRef = TypeReference (ObjectRef "LaunchRocketFairings") Nullable }, { args = [], description = Just "", name = CamelCaseName "first_stage", typeRef = TypeReference (ObjectRef "LaunchRocketFirstStage") Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (ObjectRef "Rocket") Nullable }, { args = [], description = Just "", name = CamelCaseName "second_stage", typeRef = TypeReference (ObjectRef "LaunchRocketSecondStage") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchRocketFairings") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "recovered", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "recovery_attempt", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "reused", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "ship", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchRocketFirstStage") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "cores", typeRef = TypeReference (List (TypeReference (ObjectRef "LaunchRocketFirstStageCore") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchRocketFirstStageCore") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "block", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "core", typeRef = TypeReference (ObjectRef "Core") Nullable }, { args = [], description = Just "", name = CamelCaseName "flight", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "gridfins", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "land_success", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_intent", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_vehicle", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "legs", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "reused", typeRef = TypeReference (Scalar Boolean) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Rocket") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "active", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "boosters", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "company", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "cost_per_launch", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "country", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "diameter", typeRef = TypeReference (ObjectRef "Distance") Nullable }, { args = [], description = Just "", name = CamelCaseName "engines", typeRef = TypeReference (ObjectRef "RocketEngines") Nullable }, { args = [], description = Just "", name = CamelCaseName "first_flight", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "first_stage", typeRef = TypeReference (ObjectRef "RocketFirstStage") Nullable }, { args = [], description = Just "", name = CamelCaseName "height", typeRef = TypeReference (ObjectRef "Distance") Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_legs", typeRef = TypeReference (ObjectRef "RocketLandingLegs") Nullable }, { args = [], description = Just "", name = CamelCaseName "mass", typeRef = TypeReference (ObjectRef "Mass") Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_weights", typeRef = TypeReference (List (TypeReference (ObjectRef "RocketPayloadWeight") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "second_stage", typeRef = TypeReference (ObjectRef "RocketSecondStage") Nullable }, { args = [], description = Just "", name = CamelCaseName "stages", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "success_rate_pct", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketEngines") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "number", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "version", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "layout", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "engine_loss_max", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "propellant_1", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "propellant_2", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust_sea_level", typeRef = TypeReference (ObjectRef "Force") Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust_vacuum", typeRef = TypeReference (ObjectRef "Force") Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust_to_weight", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketFirstStage") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "burn_time_sec", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "engines", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "fuel_amount_tons", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "reusable", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust_sea_level", typeRef = TypeReference (ObjectRef "Force") Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust_vacuum", typeRef = TypeReference (ObjectRef "Force") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketLandingLegs") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "number", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "material", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketPayloadWeight") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "lb", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketSecondStage") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "burn_time_sec", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "engines", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "fuel_amount_tons", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "payloads", typeRef = TypeReference (ObjectRef "RocketSecondStagePayloads") Nullable }, { args = [], description = Just "", name = CamelCaseName "thrust", typeRef = TypeReference (ObjectRef "Force") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketSecondStagePayloads") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "option_1", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "composite_fairing", typeRef = TypeReference (ObjectRef "RocketSecondStagePayloadCompositeFairing") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketSecondStagePayloadCompositeFairing") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "height", typeRef = TypeReference (ObjectRef "Distance") Nullable }, { args = [], description = Just "", name = CamelCaseName "diameter", typeRef = TypeReference (ObjectRef "Distance") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchRocketSecondStage") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "block", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "payloads", typeRef = TypeReference (List (TypeReference (ObjectRef "Payload") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Payload") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "customers", typeRef = TypeReference (List (TypeReference (Scalar String) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "manufacturer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "nationality", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "norad_id", typeRef = TypeReference (List (TypeReference (Scalar Int) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit_params", typeRef = TypeReference (ObjectRef "PayloadOrbitParams") Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_mass_kg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_mass_lbs", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reused", typeRef = TypeReference (Scalar Boolean) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "PayloadOrbitParams") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "apoapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "arg_of_pericenter", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "eccentricity", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "epoch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "inclination_deg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "lifespan_years", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "mean_anomaly", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "mean_motion", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "periapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "period_min", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "raan", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "reference_system", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "regime", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "semi_major_axis_km", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchTelemetry") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "flight_club", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Ship") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "abs", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "active", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "attempted_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "class", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "course_deg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "home_port", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "image", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "imo", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "missions", typeRef = TypeReference (List (TypeReference (ObjectRef "ShipMission") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "mmsi", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "model", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "position", typeRef = TypeReference (ObjectRef "ShipLocation") Nullable }, { args = [], description = Just "", name = CamelCaseName "roles", typeRef = TypeReference (List (TypeReference (Scalar String) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "speed_kn", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "successful_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "url", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "weight_kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "weight_lbs", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "year_built", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ShipMission") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "flight", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ShipLocation") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "latitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "HistoriesResult") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "result", typeRef = TypeReference (ObjectRef "Result") Nullable }, { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (ObjectRef "History") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Result") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "totalCount", typeRef = TypeReference (Scalar Int) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Landpad") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "attempted_landings", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "details", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "full_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "location", typeRef = TypeReference (ObjectRef "Location") Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "successful_landings", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Location") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "latitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "region", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "apoapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "block", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "cap_serial", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "capsule_reuse", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "core_flight", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "core_reuse", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "core_serial", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "customer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "eccentricity", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "end", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "epoch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "fairings_recovered", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "fairings_recovery_attempt", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "fairings_reuse", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "fairings_reused", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "fairings_ship", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "gridfins", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "inclination_deg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "land_success", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_intent", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "landing_vehicle", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_local", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_utc", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_success", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_year", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "legs", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "lifespan_years", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "manufacturer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "mean_motion", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "nationality", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "norad_id", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "periapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "period_min", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "raan", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "reference_system", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "regime", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reused", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket_id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "second_stage_block", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "semi_major_axis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "ship", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "side_core1_reuse", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "side_core2_reuse", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "site_id", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "site_name_long", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "site_name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "start", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "tbd", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "tentative_max_precision", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "tentative", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "LaunchesPastResult") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "result", typeRef = TypeReference (ObjectRef "Result") Nullable }, { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (ObjectRef "Launch") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Launchpad") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "attempted_launches", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "details", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "location", typeRef = TypeReference (ObjectRef "Location") Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "successful_launches", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "vehicles_launched", typeRef = TypeReference (List (TypeReference (ObjectRef "Rocket") Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "MissionsFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "manufacturer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_id", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Mission") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "manufacturers", typeRef = TypeReference (List (TypeReference (Scalar String) Nullable)) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "website", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payloads", typeRef = TypeReference (List (TypeReference (ObjectRef "Payload") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "MissionResult") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "result", typeRef = TypeReference (ObjectRef "Result") Nullable }, { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (ObjectRef "Mission") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "PayloadsFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "apoapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "customer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "eccentricity", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "epoch", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "inclination_deg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "lifespan_years", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "manufacturer", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "mean_motion", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "nationality", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "norad_id", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "payload_type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "periapsis_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "period_min", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "raan", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "reference_system", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "regime", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "reused", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "semi_major_axis_km", typeRef = TypeReference (Scalar Float) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Roadster") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "apoapsis_au", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "details", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "earth_distance_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "earth_distance_mi", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "eccentricity", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "epoch_jd", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "inclination", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_unix", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_date_utc", typeRef = TypeReference (Scalar (Custom (ClassCaseName "Date"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_mass_kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "launch_mass_lbs", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "mars_distance_km", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "mars_distance_mi", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "norad_id", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "orbit_type", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "periapsis_arg", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "periapsis_au", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "period_days", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "semi_major_axis_au", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "speed_kph", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "speed_mph", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "wikipedia", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "RocketsResult") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "result", typeRef = TypeReference (ObjectRef "Result") Nullable }, { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (ObjectRef "Rocket") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ShipsFind") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "ID"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "model", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "type", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "role", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "active", typeRef = TypeReference (Scalar Boolean) Nullable }, { args = [], description = Just "", name = CamelCaseName "imo", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "mmsi", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "abs", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "class", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "weight_lbs", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "weight_kg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "year_built", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "home_port", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "status", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "speed_kn", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "course_deg", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "latitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "longitude", typeRef = TypeReference (Scalar Float) Nullable }, { args = [], description = Just "", name = CamelCaseName "successful_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "attempted_landings", typeRef = TypeReference (Scalar Int) Nullable }, { args = [], description = Just "", name = CamelCaseName "mission", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ShipsResult") (ObjectType [ { args = [], description = Just "", name = CamelCaseName "result", typeRef = TypeReference (ObjectRef "Result") Nullable }, { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (ObjectRef "Ship") Nullable)) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Mutation")
            (ObjectType
                [ { args =
                        [ { description = Just "filter the rows which have to be deleted"
                          , name = CamelCaseName "where"
                          , typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) NonNullable
                          }
                        ]
                  , description = Just "delete data from the table: \"users\""
                  , name = CamelCaseName "delete_users"
                  , typeRef = TypeReference (ObjectRef "users_mutation_response") Nullable
                  }
                , { args =
                        [ { description = Just "the rows to be inserted"
                          , name = CamelCaseName "objects"
                          , typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_insert_input")) NonNullable)) NonNullable
                          }
                        , { description = Just "on conflict condition", name = CamelCaseName "on_conflict", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_on_conflict")) Nullable }
                        ]
                  , description = Just "insert data into the table: \"users\""
                  , name = CamelCaseName "insert_users"
                  , typeRef = TypeReference (ObjectRef "users_mutation_response") Nullable
                  }
                , { args =
                        [ { description = Just "sets the columns of the filtered rows to the given values"
                          , name = CamelCaseName "_set"
                          , typeRef = TypeReference (InputObjectRef (ClassCaseName "users_set_input")) Nullable
                          }
                        , { description = Just "filter the rows which have to be updated", name = CamelCaseName "where", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) NonNullable }
                        ]
                  , description = Just "update data of the table: \"users\""
                  , name = CamelCaseName "update_users"
                  , typeRef = TypeReference (ObjectRef "users_mutation_response") Nullable
                  }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "users_mutation_response") (ObjectType [ { args = [], description = Just "number of affected rows by the mutation", name = CamelCaseName "affected_rows", typeRef = TypeReference (Scalar Int) NonNullable }, { args = [], description = Just "data of the affected rows by the mutation", name = CamelCaseName "returning", typeRef = TypeReference (List (TypeReference (ObjectRef "users") NonNullable)) NonNullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_insert_input") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_on_conflict") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "constraint", typeRef = TypeReference (EnumRef (ClassCaseName "users_constraint")) NonNullable }, { args = [], description = Just "", name = CamelCaseName "update_columns", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "users_update_column")) NonNullable)) NonNullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_constraint") (EnumType [ { description = Just "unique or primary key constraint", name = ClassCaseName "users_pkey" } ]) (Just "unique or primary key constraints on table \"users\"")
        , TypeDefinition (ClassCaseName "users_update_column") (EnumType [ { description = Just "column name", name = ClassCaseName "id" }, { description = Just "column name", name = ClassCaseName "name" }, { description = Just "column name", name = ClassCaseName "rocket" }, { description = Just "column name", name = ClassCaseName "timestamp" }, { description = Just "column name", name = ClassCaseName "twitter" } ]) (Just "update columns of table \"users\"")
        , TypeDefinition (ClassCaseName "users_set_input") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (Scalar (Custom (ClassCaseName "timestamptz"))) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "Subscription") (ObjectType [ { args = [ { description = Just "distinct select on columns", name = CamelCaseName "distinct_on", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "users_select_column")) NonNullable)) Nullable }, { description = Just "limit the nuber of rows returned", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "skip the first n rows. Use only with order_by", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "sort the rows by one or more columns", name = CamelCaseName "order_by", typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_order_by")) NonNullable)) Nullable }, { description = Just "filter the rows returned", name = CamelCaseName "where", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable } ], description = Just "fetch data from the table: \"users\"", name = CamelCaseName "users", typeRef = TypeReference (List (TypeReference (ObjectRef "users") NonNullable)) NonNullable }, { args = [ { description = Just "distinct select on columns", name = CamelCaseName "distinct_on", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "users_select_column")) NonNullable)) Nullable }, { description = Just "limit the nuber of rows returned", name = CamelCaseName "limit", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "skip the first n rows. Use only with order_by", name = CamelCaseName "offset", typeRef = TypeReference (Scalar Int) Nullable }, { description = Just "sort the rows by one or more columns", name = CamelCaseName "order_by", typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_order_by")) NonNullable)) Nullable }, { description = Just "filter the rows returned", name = CamelCaseName "where", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_bool_exp")) Nullable } ], description = Just "fetch aggregated fields from the table: \"users\"", name = CamelCaseName "users_aggregate", typeRef = TypeReference (ObjectRef "users_aggregate") NonNullable }, { args = [ { description = Just "", name = CamelCaseName "id", typeRef = TypeReference (Scalar (Custom (ClassCaseName "uuid"))) NonNullable } ], description = Just "fetch data from the table: \"users\" using primary key columns", name = CamelCaseName "users_by_pk", typeRef = TypeReference (ObjectRef "users") Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "__Schema")
            (ObjectType
                [ { args = []
                  , description = Just "A list of all types supported by this server."
                  , name = CamelCaseName "types"
                  , typeRef = TypeReference (List (TypeReference (ObjectRef "__Type") NonNullable)) NonNullable
                  }
                , { args = [], description = Just "The type that query operations will be rooted at.", name = CamelCaseName "queryType", typeRef = TypeReference (ObjectRef "__Type") NonNullable }
                , { args = [], description = Just "If this server supports mutation, the type that mutation operations will be rooted at.", name = CamelCaseName "mutationType", typeRef = TypeReference (ObjectRef "__Type") Nullable }
                , { args = [], description = Just "If this server support subscription, the type that subscription operations will be rooted at.", name = CamelCaseName "subscriptionType", typeRef = TypeReference (ObjectRef "__Type") Nullable }
                , { args = [], description = Just "A list of all directives supported by this server.", name = CamelCaseName "directives", typeRef = TypeReference (List (TypeReference (ObjectRef "__Directive") NonNullable)) NonNullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "__Type")
            (ObjectType
                [ { args = []
                  , description = Nothing
                  , name = CamelCaseName "kind"
                  , typeRef = TypeReference (EnumRef (ClassCaseName "__TypeKind")) NonNullable
                  }
                , { args = [], description = Nothing, name = CamelCaseName "name", typeRef = TypeReference (Scalar String) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }
                , { args = [ { description = Nothing, name = CamelCaseName "includeDeprecated", typeRef = TypeReference (Scalar Boolean) Nullable } ], description = Nothing, name = CamelCaseName "fields", typeRef = TypeReference (List (TypeReference (ObjectRef "__Field") NonNullable)) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "interfaces", typeRef = TypeReference (List (TypeReference (ObjectRef "__Type") NonNullable)) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "possibleTypes", typeRef = TypeReference (List (TypeReference (ObjectRef "__Type") NonNullable)) Nullable }
                , { args = [ { description = Nothing, name = CamelCaseName "includeDeprecated", typeRef = TypeReference (Scalar Boolean) Nullable } ], description = Nothing, name = CamelCaseName "enumValues", typeRef = TypeReference (List (TypeReference (ObjectRef "__EnumValue") NonNullable)) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "inputFields", typeRef = TypeReference (List (TypeReference (ObjectRef "__InputValue") NonNullable)) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "ofType", typeRef = TypeReference (ObjectRef "__Type") Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "__TypeKind") (EnumType [ { description = Just "Indicates this type is a scalar.", name = ClassCaseName "SCALAR" }, { description = Just "Indicates this type is an object. `fields` and `interfaces` are valid fields.", name = ClassCaseName "OBJECT" }, { description = Just "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.", name = ClassCaseName "INTERFACE" }, { description = Just "Indicates this type is a union. `possibleTypes` is a valid field.", name = ClassCaseName "UNION" }, { description = Just "Indicates this type is an enum. `enumValues` is a valid field.", name = ClassCaseName "ENUM" }, { description = Just "Indicates this type is an input object. `inputFields` is a valid field.", name = ClassCaseName "INPUT_OBJECT" }, { description = Just "Indicates this type is a list. `ofType` is a valid field.", name = ClassCaseName "LIST" }, { description = Just "Indicates this type is a non-null. `ofType` is a valid field.", name = ClassCaseName "NON_NULL" } ]) (Just "An enum describing what kind of type a given `__Type` is.")
        , TypeDefinition (ClassCaseName "__Field") (ObjectType [ { args = [], description = Nothing, name = CamelCaseName "name", typeRef = TypeReference (Scalar String) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Nothing, name = CamelCaseName "args", typeRef = TypeReference (List (TypeReference (ObjectRef "__InputValue") NonNullable)) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "type", typeRef = TypeReference (ObjectRef "__Type") NonNullable }, { args = [], description = Nothing, name = CamelCaseName "isDeprecated", typeRef = TypeReference (Scalar Boolean) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "deprecationReason", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "__InputValue") (ObjectType [ { args = [], description = Nothing, name = CamelCaseName "name", typeRef = TypeReference (Scalar String) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Nothing, name = CamelCaseName "type", typeRef = TypeReference (ObjectRef "__Type") NonNullable }, { args = [], description = Just "A GraphQL-formatted string representing the default value for this input value.", name = CamelCaseName "defaultValue", typeRef = TypeReference (Scalar String) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "__EnumValue")
            (ObjectType
                [ { args = []
                  , description = Nothing
                  , name = CamelCaseName "name"
                  , typeRef = TypeReference (Scalar String) NonNullable
                  }
                , { args = [], description = Nothing, name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }
                , { args = [], description = Nothing, name = CamelCaseName "isDeprecated", typeRef = TypeReference (Scalar Boolean) NonNullable }
                , { args = [], description = Nothing, name = CamelCaseName "deprecationReason", typeRef = TypeReference (Scalar String) Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "__Directive") (ObjectType [ { args = [], description = Nothing, name = CamelCaseName "name", typeRef = TypeReference (Scalar String) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "description", typeRef = TypeReference (Scalar String) Nullable }, { args = [], description = Nothing, name = CamelCaseName "locations", typeRef = TypeReference (List (TypeReference (EnumRef (ClassCaseName "__DirectiveLocation")) NonNullable)) NonNullable }, { args = [], description = Nothing, name = CamelCaseName "args", typeRef = TypeReference (List (TypeReference (ObjectRef "__InputValue") NonNullable)) NonNullable } ]) Nothing
        , TypeDefinition (ClassCaseName "__DirectiveLocation") (EnumType [ { description = Just "Location adjacent to a query operation.", name = ClassCaseName "QUERY" }, { description = Just "Location adjacent to a mutation operation.", name = ClassCaseName "MUTATION" }, { description = Just "Location adjacent to a subscription operation.", name = ClassCaseName "SUBSCRIPTION" }, { description = Just "Location adjacent to a field.", name = ClassCaseName "FIELD" }, { description = Just "Location adjacent to a fragment definition.", name = ClassCaseName "FRAGMENT_DEFINITION" }, { description = Just "Location adjacent to a fragment spread.", name = ClassCaseName "FRAGMENT_SPREAD" }, { description = Just "Location adjacent to an inline fragment.", name = ClassCaseName "INLINE_FRAGMENT" }, { description = Just "Location adjacent to a variable definition.", name = ClassCaseName "VARIABLE_DEFINITION" }, { description = Just "Location adjacent to a schema definition.", name = ClassCaseName "SCHEMA" }, { description = Just "Location adjacent to a scalar definition.", name = ClassCaseName "SCALAR" }, { description = Just "Location adjacent to an object type definition.", name = ClassCaseName "OBJECT" }, { description = Just "Location adjacent to a field definition.", name = ClassCaseName "FIELD_DEFINITION" }, { description = Just "Location adjacent to an argument definition.", name = ClassCaseName "ARGUMENT_DEFINITION" }, { description = Just "Location adjacent to an interface definition.", name = ClassCaseName "INTERFACE" }, { description = Just "Location adjacent to a union definition.", name = ClassCaseName "UNION" }, { description = Just "Location adjacent to an enum definition.", name = ClassCaseName "ENUM" }, { description = Just "Location adjacent to an enum value definition.", name = ClassCaseName "ENUM_VALUE" }, { description = Just "Location adjacent to an input object type definition.", name = ClassCaseName "INPUT_OBJECT" }, { description = Just "Location adjacent to an input object field definition.", name = ClassCaseName "INPUT_FIELD_DEFINITION" } ]) (Just "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.")
        , TypeDefinition (ClassCaseName "conflict_action") (EnumType [ { description = Just "ignore the insert on this row", name = ClassCaseName "ignore" }, { description = Just "update the row with the given values", name = ClassCaseName "update" } ]) (Just "conflict action")
        , TypeDefinition (ClassCaseName "users_aggregate_order_by") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "count", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }, { args = [], description = Just "", name = CamelCaseName "max", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_max_order_by")) Nullable }, { args = [], description = Just "", name = CamelCaseName "min", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_min_order_by")) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_max_order_by")
            (InputObjectType
                [ { args = []
                  , description = Just ""
                  , name = CamelCaseName "name"
                  , typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable
                  }
                , { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                , { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }
                ]
            )
            Nothing
        , TypeDefinition (ClassCaseName "users_min_order_by") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "name", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }, { args = [], description = Just "", name = CamelCaseName "rocket", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }, { args = [], description = Just "", name = CamelCaseName "timestamp", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable }, { args = [], description = Just "", name = CamelCaseName "twitter", typeRef = TypeReference (EnumRef (ClassCaseName "order_by")) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_arr_rel_insert_input") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (List (TypeReference (InputObjectRef (ClassCaseName "users_insert_input")) NonNullable)) NonNullable }, { args = [], description = Just "", name = CamelCaseName "on_conflict", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_on_conflict")) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "users_obj_rel_insert_input") (InputObjectType [ { args = [], description = Just "", name = CamelCaseName "data", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_insert_input")) NonNullable }, { args = [], description = Just "", name = CamelCaseName "on_conflict", typeRef = TypeReference (InputObjectRef (ClassCaseName "users_on_conflict")) Nullable } ]) Nothing
        , TypeDefinition (ClassCaseName "ObjectID") ScalarType Nothing
        , TypeDefinition (ClassCaseName "CoreMission")
            (ObjectType
                [ { args = []
                  , description = Just ""
                  , name = CamelCaseName "name"
                  , typeRef = TypeReference (Scalar String) Nullable
                  }
                , { args = [], description = Just "", name = CamelCaseName "flight", typeRef = TypeReference (Scalar Int) Nullable }
                ]
            )
            Nothing
        ]
